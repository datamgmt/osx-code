Welcome to MQTTBuzz version 0.1
by David M. Walker

MQTTBuzz Help Guide

Welcome to MQTTBuzz!
MQTTBuzz is a user-friendly application that allows you to connect to multiple MQTT brokers and receive notifications based on the messages published to specific topics. This guide will walk you through how to configure, run, and use the MQTTBuzz application.

Table of Contents

	1.	Getting Started
	2.	Installation
	3.	Configuration
	•	Configuring MQTT Brokers
	•	Notification Sounds
	•	Enabling/Disabling Brokers
	4.	Running MQTTBuzz
	5.	Using MQTTBuzz
	•	Connect/Disconnect
	•	Settings
	•	Help
	•	Sound On/Off
	6.	Troubleshooting

1. Getting Started

To use MQTTBuzz, you need to have Python installed on your system along with the necessary libraries (rumps and paho-mqtt).

2. Installation

	1.	Python Installation: Make sure you have Python 3.6 or higher installed on your system. You can download Python from the official website: python.org.
	2.	Install Required Libraries:
	•	Open your terminal or command prompt.
	•	Install the rumps library by running:
    
    pip install rumps
    
    •	Install the paho-mqtt library by running:
    
    pip install paho-mqtt

3. Configuration

The configuration file (config.json) allows you to specify your MQTT settings, broker information, notification preferences, and sound settings.

Configuring MQTT Brokers

	1.	Locate the config.json File: This file is located in the same directory as the application. If it does not exist, the application will generate a default configuration file.
	2.	Edit the Configuration:
	•	Open config.json in a text editor of your choice.
	•	The configuration for MQTT brokers looks like this:    
    
{
    "mqtt_servers": [
        {
            "mqtt_broker": "broker1_address",
            "mqtt_port": 1883,
            "mqtt_topic": "topic1",
            "username": "your_username",
            "password": "your_password",
            "sound_name": "Submarine",
            "header": "Custom Header",  // Optional, defaults to broker name
            "subheader": "Custom Subheader",  // Optional, defaults to topic
            "enabled": true
        }
    ],
    "notification_sounds": {
        "settings_saved": "Glass",
        "invalid_config": "Basso",
        "error": "Funk"
    },
    "sounds_enabled": true
}    

•	mqtt_broker: The address of the MQTT broker.
	•	mqtt_port: The port used by the MQTT broker (default is 1883).
	•	mqtt_topic: The topic to subscribe to for receiving messages.
	•	username: (Optional) The username for MQTT authentication.
	•	password: (Optional) The password for MQTT authentication.
	•	sound_name: (Optional) The sound to play on message receipt. If not specified, no sound will play.
	•	header: (Optional) Custom header for notifications.
	•	subheader: (Optional) Custom subheader for notifications.
	•	enabled: (Boolean) Whether this broker should be connected on startup. Default is true.

Notification Sounds

	•	Sounds can be customized in the notification_sounds section of config.json. Specify the name of the sound file or system sound you want to play.
	•	settings_saved: Sound played when settings are successfully saved.
	•	invalid_config: Sound played when there is an invalid configuration error.
	•	error: Sound played when an error occurs.

Enabling/Disabling Brokers

	•	To enable or disable a broker, set the enabled flag in the mqtt_servers configuration. true means the broker is enabled, and false means it is disabled.

4. Running MQTTBuzz

	1.	Run the Application:
	•	Open your terminal or command prompt.
	•	Navigate to the directory where the MQTTBuzz script is located.
	•	Run the script using Python:
    
python mqttbuzz.py

•	The application will start and appear in your system’s menu bar or system tray.

5. Using MQTTBuzz

Connect/Disconnect

	•	Click the “Connect to MQTT” menu option to connect to all enabled MQTT brokers as specified in the config.json file.
	•	Once connected, the option will change to “Disconnect from MQTT.” Click it to disconnect from all brokers.

Settings

	•	Click the “Settings” menu option to open a window where you can edit the config.json configuration directly.
	•	Make changes to your MQTT brokers or notification settings.
	•	Click “OK” to save changes, or “Cancel” to exit without saving.

Help

	•	Click the “Help” menu option to display this help guide.

Sound On/Off

	•	Click the “Sound On/Off” menu option to toggle notification sounds on or off. This setting persists between sessions and is stored in the config.json file under sounds_enabled.

6. Troubleshooting

	•	Application Not Starting: Ensure that Python and the required libraries (rumps, paho-mqtt) are installed correctly.
	•	Invalid JSON Configuration: If you receive a notification saying “Invalid configuration,” check your config.json file for syntax errors or missing fields.
	•	MQTT Connection Issues: Verify that your broker addresses, ports, and authentication credentials are correct. Check your internet connection and broker availability.
	•	No Notifications: Ensure that the topics you subscribed to are publishing messages. Also, ensure that notifications are not disabled by your operating system.

Thank you for using MQTTBuzz! We hope this application enhances your MQTT experience. For further assistance, feel free to consult the community or refer to the official MQTT documentation.

